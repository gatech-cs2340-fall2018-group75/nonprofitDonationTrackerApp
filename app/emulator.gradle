//Launch emulator in background, using configured AVD name
task emulate() {
	def device = null;
	
	//Check for command-line parameter for device, which overrides any configuration
	if (project.hasProperty('emulator.device'))
	{
		device = project.property('emulator.device')
	}
	
	//If no passed device name, fetch the name from the `local.properties file`
	else
	{
		Properties properties = new Properties()
		properties.load(project.rootProject.file('local.properties').newDataInputStream())
		
		device = properties.getProperty('emulator.device')
	}
	
	//If no device name configured, fail with error message
	assert device != null : "Please define a value for 'emulator.device' in file 'local.properties' (generally something like 'Nexus_5X_API_27')"
	
	
	//Set up the background process in configuration step
	ProcessBuilder process = new ProcessBuilder()
		.directory(projectDir)
		.command(android.getSdkDirectory().toString() + '/emulator/emulator', '-avd', "$device")
	
	
	//When task is run, start the process and wait for 5 seconds before exiting (to allow the emulator to start before attempting to install the APK
	doLast {
		ext.process = process.start()
		sleep(5 * 1000)
	}
}


//Alias installDebug to install for easy usage
task install(dependsOn: ['emulate', 'installDebug'])


//Start the app on the emulated device, ensuring the emulator is running and the app is installed
task run(type: Exec, dependsOn: 'install') {
	commandLine android.getAdbExe().toString(), 'shell', 'monkey', '-p', android.defaultConfig.applicationId, '1'
}
